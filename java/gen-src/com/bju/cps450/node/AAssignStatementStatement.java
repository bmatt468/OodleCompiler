/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.bju.cps450.node;

import com.bju.cps450.analysis.*;

@SuppressWarnings("nls")
public final class AAssignStatementStatement extends PStatement
{
    private PAssignmentStatement _assignmentStatement_;

    public AAssignStatementStatement()
    {
        // Constructor
    }

    public AAssignStatementStatement(
        @SuppressWarnings("hiding") PAssignmentStatement _assignmentStatement_)
    {
        // Constructor
        setAssignmentStatement(_assignmentStatement_);

    }

    @Override
    public Object clone()
    {
        return new AAssignStatementStatement(
            cloneNode(this._assignmentStatement_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAssignStatementStatement(this);
    }

    public PAssignmentStatement getAssignmentStatement()
    {
        return this._assignmentStatement_;
    }

    public void setAssignmentStatement(PAssignmentStatement node)
    {
        if(this._assignmentStatement_ != null)
        {
            this._assignmentStatement_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._assignmentStatement_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._assignmentStatement_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._assignmentStatement_ == child)
        {
            this._assignmentStatement_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._assignmentStatement_ == oldChild)
        {
            setAssignmentStatement((PAssignmentStatement) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

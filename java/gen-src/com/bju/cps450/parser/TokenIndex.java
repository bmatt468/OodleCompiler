/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.bju.cps450.parser;

import com.bju.cps450.node.*;
import com.bju.cps450.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTNewline(@SuppressWarnings("unused") TNewline node)
    {
        this.index = 0;
    }

    @Override
    public void caseTIntegerLiteral(@SuppressWarnings("unused") TIntegerLiteral node)
    {
        this.index = 1;
    }

    @Override
    public void caseTFloatLiteral(@SuppressWarnings("unused") TFloatLiteral node)
    {
        this.index = 2;
    }

    @Override
    public void caseTStringLiteral(@SuppressWarnings("unused") TStringLiteral node)
    {
        this.index = 3;
    }

    @Override
    public void caseTUnterminatedString(@SuppressWarnings("unused") TUnterminatedString node)
    {
        this.index = 4;
    }

    @Override
    public void caseTIllegalString(@SuppressWarnings("unused") TIllegalString node)
    {
        this.index = 5;
    }

    @Override
    public void caseTBoolean(@SuppressWarnings("unused") TBoolean node)
    {
        this.index = 6;
    }

    @Override
    public void caseTBegin(@SuppressWarnings("unused") TBegin node)
    {
        this.index = 7;
    }

    @Override
    public void caseTClasskey(@SuppressWarnings("unused") TClasskey node)
    {
        this.index = 8;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 9;
    }

    @Override
    public void caseTEnd(@SuppressWarnings("unused") TEnd node)
    {
        this.index = 10;
    }

    @Override
    public void caseTFalse(@SuppressWarnings("unused") TFalse node)
    {
        this.index = 11;
    }

    @Override
    public void caseTFrom(@SuppressWarnings("unused") TFrom node)
    {
        this.index = 12;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 13;
    }

    @Override
    public void caseTInherits(@SuppressWarnings("unused") TInherits node)
    {
        this.index = 14;
    }

    @Override
    public void caseTInt(@SuppressWarnings("unused") TInt node)
    {
        this.index = 15;
    }

    @Override
    public void caseTIs(@SuppressWarnings("unused") TIs node)
    {
        this.index = 16;
    }

    @Override
    public void caseTLoop(@SuppressWarnings("unused") TLoop node)
    {
        this.index = 17;
    }

    @Override
    public void caseTMe(@SuppressWarnings("unused") TMe node)
    {
        this.index = 18;
    }

    @Override
    public void caseTNew(@SuppressWarnings("unused") TNew node)
    {
        this.index = 19;
    }

    @Override
    public void caseTNot(@SuppressWarnings("unused") TNot node)
    {
        this.index = 20;
    }

    @Override
    public void caseTNull(@SuppressWarnings("unused") TNull node)
    {
        this.index = 21;
    }

    @Override
    public void caseTString(@SuppressWarnings("unused") TString node)
    {
        this.index = 22;
    }

    @Override
    public void caseTThen(@SuppressWarnings("unused") TThen node)
    {
        this.index = 23;
    }

    @Override
    public void caseTTrue(@SuppressWarnings("unused") TTrue node)
    {
        this.index = 24;
    }

    @Override
    public void caseTWhile(@SuppressWarnings("unused") TWhile node)
    {
        this.index = 25;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 26;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 27;
    }

    @Override
    public void caseTDuck(@SuppressWarnings("unused") TDuck node)
    {
        this.index = 28;
    }

    @Override
    public void caseTFloat(@SuppressWarnings("unused") TFloat node)
    {
        this.index = 29;
    }

    @Override
    public void caseTConcatenate(@SuppressWarnings("unused") TConcatenate node)
    {
        this.index = 30;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 31;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 32;
    }

    @Override
    public void caseTMultiply(@SuppressWarnings("unused") TMultiply node)
    {
        this.index = 33;
    }

    @Override
    public void caseTDivide(@SuppressWarnings("unused") TDivide node)
    {
        this.index = 34;
    }

    @Override
    public void caseTGreater(@SuppressWarnings("unused") TGreater node)
    {
        this.index = 35;
    }

    @Override
    public void caseTGreaterEqual(@SuppressWarnings("unused") TGreaterEqual node)
    {
        this.index = 36;
    }

    @Override
    public void caseTEquals(@SuppressWarnings("unused") TEquals node)
    {
        this.index = 37;
    }

    @Override
    public void caseTAssignment(@SuppressWarnings("unused") TAssignment node)
    {
        this.index = 38;
    }

    @Override
    public void caseTLParen(@SuppressWarnings("unused") TLParen node)
    {
        this.index = 39;
    }

    @Override
    public void caseTRParen(@SuppressWarnings("unused") TRParen node)
    {
        this.index = 40;
    }

    @Override
    public void caseTLBracket(@SuppressWarnings("unused") TLBracket node)
    {
        this.index = 41;
    }

    @Override
    public void caseTRBracket(@SuppressWarnings("unused") TRBracket node)
    {
        this.index = 42;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 43;
    }

    @Override
    public void caseTSemicolon(@SuppressWarnings("unused") TSemicolon node)
    {
        this.index = 44;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 45;
    }

    @Override
    public void caseTDot(@SuppressWarnings("unused") TDot node)
    {
        this.index = 46;
    }

    @Override
    public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node)
    {
        this.index = 47;
    }

    @Override
    public void caseTUnknownCharacter(@SuppressWarnings("unused") TUnknownCharacter node)
    {
        this.index = 48;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 49;
    }
}
